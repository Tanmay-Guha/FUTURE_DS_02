# -*- coding: utf-8 -*-
"""FUTURE-TASK2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10uJPtqy-8zx70MHndUOIFixWAh0qredl
"""

import pandas as pd
df = pd.read_csv('/content/customer_support_tickets.csv')

# Basic Info
print("Dataset shape:", df.shape)
print("\nColumn names:", df.columns.tolist())
df.info()
df.describe(include='all')

import nltk
import string
import re
nltk.download('stopwords')
nltk.download('punkt_tab') # Download punkt_tab data package
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize

stop_words = set(stopwords.words('english'))

def clean_text(text):
    if pd.isnull(text):
        return ""
    text = text.lower()
    text = re.sub(r'\d+', '', text)
    text = text.translate(str.maketrans('', '', string.punctuation))
    tokens = word_tokenize(text)
    filtered_words = [w for w in tokens if w not in stop_words]
    return ' '.join(filtered_words)

df['cleaned_text'] = df['Ticket Description'].apply(clean_text)
df[['Ticket Description', 'cleaned_text']].head()

# Find Common Issues using Word Frequency
from collections import Counter

all_words = ' '.join(df['cleaned_text']).split()
word_freq = Counter(all_words)
common_issues = word_freq.most_common(20)
common_issues

# Visualize Common Issues
import matplotlib.pyplot as plt

words, freqs = zip(*common_issues)
plt.figure(figsize=(12,6))
plt.bar(words, freqs, color='skyblue')
plt.title('Top 20 Frequent Words in Support Tickets')
plt.xticks(rotation=45)
plt.xlabel('Words')
plt.ylabel('Frequency')
plt.tight_layout()
plt.show()

# Group by Categories

if 'Category' in df.columns:
    df['Category'].value_counts().plot(kind='barh', title='Tickets per Category', figsize=(10, 5))

# Generate a Summary Report
summary = {
    "Total Tickets": len(df),
    "Most Common Words": common_issues,
    "Top Suggestions": [
        "Automate replies for frequent issues (e.g., password reset, login failure).",
        "Improve knowledge base articles based on frequent topics.",
        "Use categorization to assign tickets to specialized agents."
    ]
}

import pprint
pp = pprint.PrettyPrinter(indent=2)
pp.pprint(summary)